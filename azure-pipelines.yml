trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

steps:
# Step 1: Instalar Node.js
- task: UseNode@1
  inputs:
    version: '16.x' # Atualize para a versão do Node.js que você está usando
  displayName: 'Instalar Node.js'

# Step 2: Instalar dependências e construir o projeto
- script: |
    npm install
    npm run build
  displayName: 'Instalar dependências e construir o projeto'

# Step 3: Executar testes (se aplicável)
- script: |
    npm test
  displayName: 'Executar testes'

# Step 4: Analisar código (Exemplo com ESLint)
- script: |
    npm run lint
  displayName: 'Analisar código com ESLint'

# Step 5: Salvar artefatos de build (se aplicável)
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: 'dist'
    artifactName: 'drop'
  condition: succeededOrFailed()
  displayName: 'Salvar artefatos de build'

# Step 6: Fazer o deploy (dependendo da sua infraestrutura de deployment)
# Aqui é um exemplo simples para um App Service do Azure
- task: AzureWebApp@1
  inputs:
    azureSubscription: '<Seu Azure Subscription>'
    appName: '<Nome do seu App Service>'
    package: '$(Build.ArtifactStagingDirectory)/drop'
  displayName: 'Fazer deploy para o Azure Web App'
